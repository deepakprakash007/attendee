# Core Django
DJANGO_SETTINGS_MODULE=attendee.settings.production-gke
DJANGO_SECRET_KEY=REPLACE_ME
CREDENTIALS_ENCRYPTION_KEY=REPLACE_ME
DISABLE_SIGNUP=
SITE_DOMAIN=app.attendee.dev

# Database (Cloud SQL)
# Use private IP + Cloud SQL Proxy sidecar. Build DATABASE_URL like:
# postgresql://<USER>:<PASSWORD>@127.0.0.1:5432/<DB_NAME>
DATABASE_URL=postgresql://postgres:REPLACE_PASSWORD@127.0.0.1:5432/attendee
CLOUDSQL_INSTANCE_CONNECTION_NAME=PROJECT:REGION:INSTANCE

# Redis (Memorystore) - use public or private IP reachable from cluster
REDIS_URL=rediss://:REPLACE_PASSWORD@host:port/0
# If your Memorystore doesn't use TLS, or you must disable cert validation:
# DISABLE_REDIS_SSL=true  # appends ?ssl_cert_reqs=none where applicable

# Email (Mailgun or other SMTP)
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=
ERROR_REPORTS_RECEIVER_EMAIL_ADDRESS=

# Storage (S3-compatible; if using GCS, set a compatible gateway or update storage backend)
AWS_ENDPOINT_URL=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_RECORDING_STORAGE_BUCKET_NAME=

# Stripe
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

# OpenAI / LLMs
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_MODEL_NAME=gpt-4o-transcribe

# Zoom SDK (for web bot)
ZOOM_MEETING_SDK_KEY=
ZOOM_MEETING_SDK_SECRET=

# Bots launching in Kubernetes
LAUNCH_BOT_METHOD=kubernetes
CUBER_APP_NAME=attendee
# Use your image repo for bot pods if not same as web/worker image
BOT_POD_IMAGE=ghcr.io/deepakprakash007/attendee
# A unique release version string expected by bot pod creator
CUBER_RELEASE_VERSION=hash-1699999999
# Karpenter opt-in for do-not-disrupt/evict annotations
USING_KARPENTER=false
# Bot resource sizing
BOT_CPU_REQUEST=4
BOT_MEMORY_REQUEST=4Gi
BOT_MEMORY_LIMIT=4Gi
BOT_EPHEMERAL_STORAGE_REQUEST=10Gi
BOT_EPHEMERAL_STORAGE_LIMIT=10Gi

# Optional knobs
PROJECT_POST_THROTTLE_RATE=3000/min
CHARGE_CREDITS_FOR_BOTS=false
DO_NOT_RECORD_MEETING_REACTIONS=
ENABLE_ZOOM_VIDEO_OUTPUT=
SAVE_BOT_RESOURCE_SNAPSHOTS=false

# Gunicorn and Celery tuning
WEB_WORKERS=3
WEB_THREADS=2
CELERY_CONCURRENCY=4
